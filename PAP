#include <OneWire.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <DallasTemperature.h>

#define STemperatura1 2     // sensor responsável pelo controle do circuito
#define STemperatura2 3
#define V1 8    // válvula responsável pelo arrefecimento de água
#define V2 9    // válvula de saída de água do painél
#define V3 10   // válvula de saída de água do esquentador
#define AQ 11   // resistência de aquecimento
#define BotaoAumentar 5
#define BotaoDiminuir 6
#define BotaoMudarTela 7

int Temp1MIN = 25;      // abaixo disto a V1 fecha
int Temp1MAX = 30;      // acima disto a V1 abre
int TempV2MIN = 22;     // abaixo disto V2 fecha e V3  abre
int TempV2MAX = 55;     // acima disto V2 abre e V3  fecha
int TempAQMIN = 30;     // acima disto resistência desliga
int TempAQMAX = 35;     // abaixo disto resistência liga

int EstadoV1 = 0;
int EstadoV2 = 0;
int EstadoV3 = 0;

unsigned long horaAtual;
unsigned long horaAnterior = 0;
unsigned long lastButtonPress = 0;
const unsigned long debounceDelay = 300;

int screen = 0;

OneWire oneWire1(STemperatura1);
OneWire oneWire2(STemperatura2);
DallasTemperature sensors1(&oneWire1);
DallasTemperature sensors2(&oneWire2);

LiquidCrystal_I2C lcd(0x27, 20, 4);

void setup() {
  pinMode(V1, OUTPUT);
  pinMode(V2, OUTPUT);
  pinMode(V3, OUTPUT);
  pinMode(AQ, OUTPUT);
  Serial.begin(9600);
  sensors1.begin();
  sensors2.begin();
  lcd.init();
  lcd.backlight();
}

void displayTemperatura(int indicesensor) {
  lcd.clear();
  float temp_C1 = sensors1.getTempCByIndex(indicesensor);
  float temp_C2 = sensors2.getTempCByIndex(indicesensor);

  lcd.setCursor(0, 0);
  lcd.print("ST1: ");
  lcd.print(temp_C1, 2);
  lcd.print("C");

  lcd.setCursor(0, 2);
  lcd.print("ST2: ");
  lcd.print(temp_C2, 2);
  lcd.print("C");
}

void controlV1(int indicesensor) {
  float temp_C1 = sensors1.getTempCByIndex(indicesensor);

  if (temp_C1 >= Temp1MAX) {
    digitalWrite(V1, HIGH);
    EstadoV1 = 1;
  } else if (temp_C1 <= Temp1MIN) {
    digitalWrite(V1, LOW);
    EstadoV1 = 0;
  }
}

void controlV2(int indicesensor) {
  float temp_C1 = sensors1.getTempCByIndex(indicesensor);

  if (temp_C1 >= TempV2MIN  &&  temp_C1 <= TempV2MAX) {
    digitalWrite(V2, HIGH);
    EstadoV2 = 1;
    digitalWrite(V3, LOW);
    EstadoV3 = 0;
  } else if (temp_C1 >= TempV2MAX  ||  temp_C1 <= TempV2MIN) {
    digitalWrite(V2, LOW);
    EstadoV2 = 0;
    digitalWrite(V3, HIGH);
    EstadoV3 = 1;
  }
}

void controlAQ(int indicesensor)
{
  float temp_C1 = sensors1.getTempCByIndex(indicesensor);
 
  if (temp_C1 >= TempAQMAX)
  {
    digitalWrite(AQ, LOW);
  }
  else if (temp_C1 <= TempAQMIN)
  {
    digitalWrite(AQ, HIGH);
  }
}

void menu() {
  if (screen == 0) {          // ECRÃ: DISPLAY TEMPERATURA
    displayTemperatura(0);

    if (digitalRead(BotaoMudarTela) == HIGH && horaAtual - lastButtonPress >= debounceDelay) {
      screen = 1;
      lastButtonPress = millis();
    }
  } else if (screen == 1) {       // ECRÃ: ESTADO VALVULAS
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("V1: ");
    lcd.print(EstadoV1 == HIGH ? "Aberta" : "Fechada");

    lcd.setCursor(0, 1);
    lcd.print("V2: ");
    lcd.print(EstadoV2 == HIGH ? "Aberta" : "Fechada");

    lcd.setCursor(0, 2);
    lcd.print("V3: ");
    lcd.print(EstadoV3 == HIGH ? "Aberta" : "Fechada");

    if (digitalRead(BotaoMudarTela) == HIGH && horaAtual - lastButtonPress >= debounceDelay) {
      screen = 2;
      lastButtonPress = millis();
    }
  } else if (screen == 2) {           // ECRÃ: TEMP1MAX
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Temp1MAX: ");
    lcd.setCursor(0, 11);
    lcd.print(Temp1MAX);

    if (digitalRead(BotaoMudarTela) == HIGH && horaAtual - lastButtonPress >= debounceDelay) {
      screen = 3;
      lastButtonPress = millis();
    }
  } else if (screen == 3) {           // ECRÃ: TEMP1MIN
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Temp1MIN: ");
    lcd.setCursor(0, 11);
    lcd.print(Temp1MIN);

    if (digitalRead(BotaoMudarTela) == HIGH && horaAtual - lastButtonPress >= debounceDelay) {
      screen = 4;
      lastButtonPress = millis();
    }
  } else if (screen == 4) {             // ECRÃ: TEMPV2MAX
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("TempV2MAX: ");
    lcd.setCursor(0, 11);
    lcd.print(TempV2MAX);

    if (digitalRead(BotaoMudarTela) == HIGH && horaAtual - lastButtonPress >= debounceDelay) {
      screen = 5;
      lastButtonPress = millis();
    }
  } else if (screen == 5) {             // ECRÃ: TEMPV2MIN
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("TempV2MIN: ");
    lcd.setCursor(0, 11);
    lcd.print(TempV2MIN);

    if (digitalRead(BotaoMudarTela) == HIGH && horaAtual - lastButtonPress >= debounceDelay) {
      screen = 0;
      lastButtonPress = millis();
    }
  }

  if (digitalRead(BotaoAumentar) == HIGH && horaAtual - lastButtonPress >= debounceDelay) {
    if (screen == 2) {
      Temp1MAX++;
    } else if (screen == 3) {
      Temp1MIN++;
    } else if (screen == 4) {
      TempV2MAX++;
    } else if (screen == 5) {
      TempV2MIN++;
    }
    lastButtonPress = millis();
  }

  if (digitalRead(BotaoDiminuir) == HIGH && horaAtual - lastButtonPress >= debounceDelay) {
    if (screen == 2) {
      Temp1MAX--;
    } else if (screen == 3) {
      Temp1MIN--;
    } else if (screen == 4) {
      TempV2MAX--;
    } else if (screen == 5) {
      TempV2MIN--;
    }
    lastButtonPress = millis();
  }
}

void loop() {
  horaAtual = millis();
  sensors1.requestTemperatures();
  sensors2.requestTemperatures();

  menu();

  if (horaAtual - horaAnterior >= 3000) {
    controlV1(0);
    controlV2(0);
    controlAQ(0);
    horaAnterior = horaAtual;
  }
}
