// BIBLIOTECAS

#include <OneWire.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <DallasTemperature.h>

// CONFIGURAÇÃO/INICIALIZAÇÃO DE COMPONENTES

#define STemperatura 2
const int V1 = 8;
const int Temp1MIN = 40;
const int Temp1MAX = 50;


OneWire oneWire(STemperatura);
DallasTemperature sensors(&oneWire);

LiquidCrystal_I2C lcd(0x27, 20, 4);

/* VARIÁVEIS */
unsigned long horaAtual;
unsigned long horaAnterior = 0;

// SETUP

void setup()
{
  pinMode(V1, OUTPUT);
  Serial.begin(9600);
  sensors.begin();
  lcd.init();
  lcd.backlight();
}

void displayTemperatura(int indicesensor)
{
  
  lcd.clear();
  sensors.requestTemperatures();
  float temp_C = sensors.getTempCByIndex(indicesensor);
  Serial.print(temp_C, 2);    // Temperatura com x casas decimais
  Serial.println(" ºC");
  lcd.setCursor(0, 0);
  lcd.print("ST1: ");
  lcd.print(temp_C, 2);     // Temperatura com x casas decimais
  lcd.print("C");
  
  lcd.setCursor(5, 1);
  float temp_F = DallasTemperature::toFahrenheit(temp_C);
  Serial.print(temp_F, 1);
  Serial.println(" ºF");
  lcd.print(temp_F);
  lcd.print("F");

  lcd.printl("-------------")
  
}

void controlV1(int indicesensor)
{
  float temp_C = sensors.getTempCByIndex(indicesensor);
  if (temp_C >= Temp1MAX)
  {
    digitalWrite(V1, HIGH);
  }
  else if (temp_C <= Temp1MIN)
  {
    digitalWrite(V1, LOW);
  }
}

void loop()
{
  horaAtual = millis();
  //sensors.requestTemperatures();

  if (horaAtual - horaAnterior >= 3000) {
    displayTemperatura(0);
    controlV1(0);
    horaAnterior = horaAtual;
  }
}
